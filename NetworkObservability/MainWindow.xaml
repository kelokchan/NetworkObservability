<Window x:Class="NetworkObservability.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:custom="clr-namespace:NetworkObservability"
        mc:Ignorable="d"
        WindowState="Maximized"
        Title="MainWindow"  AllowDrop="True">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0">
            <Menu Padding="5 0 5 0">
                <MenuItem Header="_File">
                    <MenuItem Header="_Open" Click="MenuOpen_Click"/>
                    <MenuItem Header="_Close"/>
                    <MenuItem Header="_Save"/>
                </MenuItem>

                <MenuItem Header="_Add">
                    <MenuItem Header="_Node"/>
                    <MenuItem Header="_Arc"/>
                </MenuItem>
            </Menu>

            <!-- Grid to place two toolbars -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="2.5*" />
                </Grid.ColumnDefinitions>
                <!-- Left toolbar -->
                <ToolBar Grid.Column="0" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" ToolBarTray.IsLocked="True" Height="50">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="15 0 0 0">
                        <Button Content="Start" Width="70" HorizontalAlignment="Left" Style="{DynamicResource ButtonStyleForStart}" Click="Start_Click"/>
                        <Button x:Name="___Button___Pause_" Margin="5 0 0 0" Content="Start" Width="25" HorizontalAlignment="Left" Style="{DynamicResource ButtonStylePause}" IsEnabled="False"/>
                        <Button x:Name="___Button___Stop_" Margin="5 0 0 0" Content="Start" Width="25" HorizontalAlignment="Left" Style="{DynamicResource ButtonStyleStop}" IsEnabled="False"/>
                    </StackPanel>
                </ToolBar>
                <!-- Left toolbar -->
                <!-- Right toolbar -->
                <ToolBar Grid.Column="2" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Height="50" ToolBarTray.IsLocked="True" >
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="35 0 0 0">
                        <Label Content="Node:" VerticalContentAlignment="Center" FontWeight="Bold"></Label>
                        <custom:CanvasNode x:Name="canvasNodeButton" Margin="20 0 20 0" VerticalContentAlignment="Center"></custom:CanvasNode>
                        <Label Content="Arc type:" VerticalContentAlignment="Center" FontWeight="Bold"/>
                        <ComboBox x:Name="ArcType" Height="25" Width="150" Background="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderBrush="#00ACACAC" >
                            <ComboBoxItem x:Name="DirectedArc" Content="Directed lines" Selector.IsSelected="True" />
                            <ComboBoxItem x:Name="UndirectedArc" Content="Undirected lines"/>
                        </ComboBox>
                        <!-- Add the image label for the arrows here! -->
                        
                        <Button x:Name="___Button___Delete_" Margin="10 0 0 0" Content="Start" Width="70" HorizontalAlignment="Left" Style="{DynamicResource ButtonStyleDelete}" Click="___Button___Delete__Click" />
                    </StackPanel>
                </ToolBar>
                <!-- Right toolbar -->
            </Grid>
            <!-- Grid to place two toolbars -->
        </StackPanel>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <GridSplitter HorizontalAlignment="Right" VerticalAlignment="Stretch" Grid.Column="1" ResizeBehavior="PreviousAndNext" Width="5" Background="#FFBCBCBC"/>
            <TabControl Grid.Column="2">
                <TabItem Header="Properties">
                    <Grid x:Name="PropertiesPanel" Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Row="0" Grid.Column="0" Text="ID: "/>
                        <TextBox Grid.Row="0" Grid.Column="1" Margin="0 0 0 5" Text="{Binding ID, Mode=OneWay}" IsReadOnly="True"></TextBox>
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Label: "/>
                        <TextBox Grid.Row="1" Grid.Column="1" Margin="0 0 0 5" Text="{Binding Label, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Observer: "/>
                        <CheckBox Grid.Row="2" Grid.Column="1" Margin="0 0 0 5" IsChecked="{Binding IsObserver, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
                        <TextBlock Grid.Row="3" Grid.Column="0" Text="Visible: "/>
                        <CheckBox Grid.Row="3" Grid.Column="1" Margin="0 0 0 5" IsChecked="{Binding IsNodeVisible, UpdateSourceTrigger=PropertyChanged}"></CheckBox>
                        <TextBlock Grid.Row="4" Grid.Column="0" Text="X: "/>
                        <TextBox Grid.Row="4" Grid.Column="1" Margin="0 0 0 5" Text="{Binding X, StringFormat=N0, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False"></TextBox>
                        <TextBlock Grid.Row="5" Grid.Column="0" Text="Y: "/>
                        <TextBox Grid.Row="5" Grid.Column="1" Margin="0 0 0 5" Text="{Binding Y, StringFormat=N0,UpdateSourceTrigger=PropertyChanged}" IsEnabled="False"></TextBox>
                    </Grid>
                </TabItem>
            </TabControl>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="4*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <ScrollViewer Grid.Row="0" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible">
                    <custom:DragCanvas x:Name="MainCanvas" Background="AliceBlue" Width="2560" Height="1440" AllowDrop="True" AllowDragging="True" Drop="MainCanvas_Drop" PreviewMouseRightButtonDown="MainCanvas_PreviewMouseRightButtonDown">
                        <custom:DragCanvas.ContextMenu>
                            <ContextMenu Opened="OnContextMenuOpened"  MenuItem.Click="OnMenuItemClick">
                                <MenuItem Header="Connect From Here" Name="menuStartArc" />
                                <MenuItem Header="Connect To Here" Name="menuEndArc" Visibility="Collapsed"/>
                                <MenuItem Header="Bring To Front" Name="menuItemBringToFront" />
                                <MenuItem Header="Send To Back" Name="menuItemSendToBack" />
                            </ContextMenu>
                        </custom:DragCanvas.ContextMenu>

                    </custom:DragCanvas>
                </ScrollViewer>

                <GridSplitter VerticalAlignment="Center" Grid.Row="1" Height="5" Background="#FFBCBCBC" HorizontalAlignment="Stretch"/>

                <TabControl Grid.Row="2" TabStripPlacement="Bottom" BorderThickness="1,0,1,1" >
                    <TabItem Header="Log" Name="logTab">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <Grid Height="Auto">
                                <Label Content="> See log messages here..." Name="logger"/>
                            </Grid>
                        </ScrollViewer>
                    </TabItem>
                </TabControl>
            </Grid>
        </Grid>
    </Grid>

</Window>
